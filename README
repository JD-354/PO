
Estructura del Proyecto:

El repositorio está organizado en las siguientes carpetas:

backend: Contiene el código del servidor desarrollado con Node.js y TypeScript.

frontend: Contiene la aplicación cliente desarrollada con React y TypeScript.
____________________________________________________________________________________
Instalación y Configuración

Requisitos Previos:

-Node.js (versión 16 o superior).

-npm o yarn para gestionar dependencias.

-TypeScript instalado globalmente (opcional).
____________________________________________________________________________
Backend:

Instalación de dependencias:

-cd backend

-npm install

Configuración de variables de entorno:

Crea un archivo .env en la carpeta backend y añade las siguientes variables:

-MONGO_URI=<URL_DE_TU_BASE_DE_DATOS_MONGODB>

-JWT_SECRET=<TU_SECRETO_JWT>

-PORT=<TU_PUERTO>

Ejecución del servidor:

Para iniciar en modo desarrollo:

-npm run dev

Para compilar y ejecutar:

-npm run build

-npm start
____________________________________________________________
Frontend:

Instalación de dependencias:

-cd frontend

-npm install

Ejecución del cliente:

Inicia el servidor de desarrollo:

-npm run dev

Tecnologías Utilizadas:

Backend:

-Node.js y TypeScript.

-Express para crear el servidor.

-Mongoose para la conexión con MongoDB.


-JWT para autenticación segura.

Frontend:

-React y TypeScript.

-TailwindCSS para el diseño de la interfaz.

-React Router para el manejo de rutas.

-Axios para las solicitudes HTTP.


Despliegue: El sistema está desplegado en Render, garantizando una integración fluida entre el backend y el frontend. Puedes acceder a la aplicación en:

Frontend: https://gestion-eventos-f.onrender.com/

Backend: https://gestioneventos-xv8m.onrender.com/

Si quieres probar usuario(Puedes crear Uno) de la App usa lo siguiente:

User: correo: user@gmail.com -password: 123

A veces puede ser lento al principio o, se puede demorar en cargar la primera vez por que al ser un plan gratuito de render me ofrece poca memoria .

________________________________________________________________________________________________
Backend:

-Desarrollado con Node.js y TypeScript para garantizar un código robusto y tipado.

-Implementa JWT para autenticación y protege las rutas sensibles.


Frontend:

-Creado con React y TypeScript, con un diseño responsivo utilizando TailwindCSS.

-Consume la API del backend mediante Axios.

-Implementa una experiencia de usuario fluida con React Router y componentes reutilizables.
